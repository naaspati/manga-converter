import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

apply plugin: 'java'
apply plugin: 'application'

// i complicated this app too much, so skipping unit testing

repositories {
    jcenter()
}
dependencies {
   compile files('myutils.jar')
   compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
   compile "com.beust:jcommander:1.71"
}

version = 2.00
sourceCompatibility = JavaVersion.VERSION_1_8 
targetCompatibility = JavaVersion.VERSION_1_8
 
mainClassName = 'samrock.converters.app.main.App'

run {
  if(System.properties['args'])  //pass args from cmd as -Dargs="args separated by space"
    args System.properties['args'].split(' ')
    
  /*
  environment.MAX_FILE_NUMBER = 20
  environment.SKIP_DOUBLE_PAGE_CHECK = true
  environment.SKIP_NUMBER_MISSINGS_CHECK = true
  environment.SKIP_PAGE_SIZE_CHECK = true
  environment.SKIP_FISHY_CHECK = true
  environment.CHAPTERS_DATA_FILE = 'environment.txt'
  */
}

task copy(type: Copy, dependsOn:'installDist') { 
  from(fileTree("$buildDir/install/${distributions.main.baseName}"))
  into(/D:\Core Files\Emulator\dolphin\Manga\Data\Converter\app/)
  
  doLast {
     Files.copy(file('logging.properties').toPath(), Paths.get(/D:\Core Files\Emulator\dolphin\Manga\Data\Converter\logging.properties/), , StandardCopyOption.REPLACE_EXISTING);
  }
  
}

jar {
  manifest {
        attributes('Manifest-Version': '1.0',
                   'Implementation-Version': version,
                   'Main-Class':"$mainClassName",	
                   'Class-Path':'.'
                   )
    }
}

defaultTasks 'iD', 'copy'
